{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","state","date","Date","this","tick","previousProps","clockName","props","oldClockName","newClockName","console","log","clearInterval","setInterval","setState","toLocaleTimeString","React","Component","App","isClockVisible","showClock","hideClock","setRandomName","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,aADF,IAGEC,MAAQ,CACNC,KAAM,IAAIC,MAJd,uDAOE,WACEC,KAAKC,SART,gCAWE,SAAmBC,GACjB,MAAqC,CAACA,EAAcC,UAAWH,KAAKI,MAAMD,WAAnEE,EAAP,KAAqBC,EAArB,KAEID,IAAiBC,GAEnBC,QAAQC,IAAR,qCAA0CH,EAA1C,eAA6DC,MAhBnE,kCAoBE,WACMN,KAAKJ,SACPa,cAAcT,KAAKJ,WAtBzB,kBA0BE,WAAQ,IAAD,OACLI,KAAKJ,QAAUc,aAAY,WACzB,EAAKC,SAAS,CACZb,KAAM,IAAIC,OAIZQ,QAAQC,IAAI,EAAKX,MAAMC,KAAKc,wBAC3B,OAlCP,oBAqCE,WACE,OACE,oDAAqBZ,KAAKH,MAAMC,KAAKc,4BAvC3C,GAA2BC,IAAMC,WCD3BC,E,4MACJlB,MAAQ,CACNmB,gBAAgB,EAChBb,UAAW,K,EAWbc,UAAY,WACV,EAAKN,SAAS,CAAEK,gBAAgB,K,EAGlCE,UAAY,WACV,EAAKP,SAAS,CAAEK,gBAAgB,K,EAGlCG,cAAgB,WACd,EAAKR,SAAS,CACZR,UAAWiB,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAI/B,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,6CAECvB,KAAKH,MAAMmB,gBAAkB,cAAC,EAAD,CAAOb,UAAWH,KAAKH,MAAMM,YAE3D,wBAAQqB,KAAK,SAASC,QAASzB,KAAKiB,UAApC,wBAIA,wBAAQO,KAAK,SAASC,QAASzB,KAAKkB,UAApC,wBAIA,wBAAQM,KAAK,SAASC,QAASzB,KAAKmB,cAApC,oC,GA3CUN,IAAMC,WAmDTC,ICzDfW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6f9ab4b3.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: number\n};\n\ntype ClockState = {\n  date: Date\n};\n\nexport class Clock extends React.Component<Props, ClockState> {\n  timerId: NodeJS.Timeout | undefined;\n\n  state = {\n    date: new Date(),\n  };\n\n  componentDidMount() {\n    this.tick();\n  }\n\n  componentDidUpdate(previousProps: Props) {\n    const [oldClockName, newClockName] = [previousProps.clockName, this.props.clockName];\n\n    if (oldClockName !== newClockName) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${oldClockName} to ${newClockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  tick() {\n    this.timerId = setInterval(() => {\n      this.setState({\n        date: new Date(),\n      });\n\n      // eslint-disable-next-line no-console\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  render() {\n    return (\n      <p>{`Current time: ${this.state.date.toLocaleTimeString()}`}</p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\ntype AppState = {\n  isClockVisible: boolean,\n  clockName: number,\n};\n\nclass App extends React.Component<{}, AppState> {\n  state = {\n    isClockVisible: true,\n    clockName: 120,\n  };\n\n  // showClock() {\n  //   this.setState({ isClockVisible: true });\n  // }\n\n  // hideClock() {\n  //   this.setState({ isClockVisible: false });\n  // }\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  setRandomName = () => {\n    this.setState({\n      clockName: Math.floor(Math.random() * 120),\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.isClockVisible && <Clock clockName={this.state.clockName} />}\n\n        <button type=\"button\" onClick={this.showClock}>\n          Show Clock\n        </button>\n\n        <button type=\"button\" onClick={this.hideClock}>\n          Hide Clock\n        </button>\n\n        <button type=\"button\" onClick={this.setRandomName}>\n          Set Random Name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}